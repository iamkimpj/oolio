{
  "version": 3,
  "sources": ["../src/index.js", "../src/request.js"],
  "sourcesContent": ["import request from \"./request\";\r\n\r\nconst createOolio = (() => {\r\n  let instance = null;\r\n  let _routes;\r\n  let getAuthorizeToken;\r\n  let baseUrl;\r\n  let api = {};\r\n\r\n  function logForNoRoutes() {\r\n    console.warn(`\r\n    [oolio] routes\uAC00 \uC815\uC758\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. routes\uB294 \uB2E4\uC74C\uACFC \uAC19\uC740 \uD615\uC2DD\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4:\r\n    \r\n    const routes = {\r\n      auth: {\r\n        login: {\r\n          method: 'post',\r\n          path: '/auth/login',\r\n          payload: ['email', 'password']\r\n        },\r\n        register: {\r\n          method: 'post',\r\n          path: '/auth/register',\r\n          payload: ['email', 'password', 'name']\r\n        }\r\n      },\r\n      user: {\r\n        getProfile: {\r\n          method: 'get',\r\n          path: '/user/profile'\r\n        },\r\n        updateProfile: {\r\n          method: 'put',\r\n          path: '/user/profile',\r\n          payload: ['name', 'avatar']\r\n        },\r\n        uploadAvatar: {\r\n          method: 'post',\r\n          path: '/user/avatar',\r\n          payload: ['userId'],\r\n          files: ['avatar']  // \uD30C\uC77C \uC5C5\uB85C\uB4DC \uD544\uB4DC\r\n        }\r\n      }\r\n    };\r\n    \r\n    \uAC01 \uB77C\uC6B0\uD2B8\uB294 \uB2E4\uC74C \uC18D\uC131\uC744 \uAC00\uC9C8 \uC218 \uC788\uC2B5\uB2C8\uB2E4:\r\n    - method: HTTP \uBA54\uC18C\uB4DC (get, post, put, delete \uB4F1)\r\n    - path: API \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uACBD\uB85C\r\n    - payload: \uC694\uCCAD\uC5D0 \uD3EC\uD568\uB420 \uB370\uC774\uD130 \uD544\uB4DC \uBAA9\uB85D (\uC120\uD0DD\uC0AC\uD56D)\r\n    - authorization: \uC778\uC99D \uD544\uC694 \uC5EC\uBD80 (\uAE30\uBCF8\uAC12: true)\r\n    - files: \uD30C\uC77C \uC5C5\uB85C\uB4DC \uD544\uB4DC \uBAA9\uB85D (\uC120\uD0DD\uC0AC\uD56D)\r\n    `);\r\n    return;\r\n  }\r\n\r\n  function logForNoGetAuthorizeToken() {\r\n    console.log(\"getAuthorizeToken is undefined\");\r\n  }\r\n\r\n  function init() {\r\n    if (_routes === undefined) {\r\n      logForNoRoutes();\r\n      return;\r\n    } else if (getAuthorizeToken === undefined) {\r\n      logForNoGetAuthorizeToken();\r\n      return;\r\n    }\r\n    for (const category in _routes) {\r\n      if (api[category] === undefined) {\r\n        api[category] = {};\r\n      }\r\n      for (const fnName in _routes[category]) {\r\n        api[category][fnName] = (...args) => {\r\n          const requestFn = request(baseUrl, getAuthorizeToken);\r\n          return requestFn.call(_routes[category][fnName], ...args);\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  return () => {\r\n    if (!instance) {\r\n      instance = {\r\n        api,\r\n        routes: (r) => {\r\n          _routes = r;\r\n          init();\r\n          return instance;\r\n        },\r\n        setFnGetAuthorizeToken: (fn) => {\r\n          getAuthorizeToken = fn;\r\n          init();\r\n          return instance;\r\n        },\r\n        setBaseUrl: (url) => {\r\n          baseUrl = url;\r\n          init();\r\n          return instance;\r\n        },\r\n      };\r\n    }\r\n    return instance;\r\n  };\r\n})();\r\n\r\nconst instance = createOolio();\r\n\r\n// ESM exports\r\nexport const api = instance.api;\r\nexport default instance;\r\n", "const hasParams = (path) => {\n  const paramPattern = /\\/\\{[^}]+\\}/g;\n  return paramPattern.test(path);\n};\nconst hasFiles = (fileIndex = undefined) => {\n  if (fileIndex == undefined) return false;\n  return fileIndex.length > 0;\n};\n\nconst convQueryParamsForGet = (payload = [], data = {}) => {\n  const query = {};\n  if (Array.isArray(payload)) {\n    for (const key in data) {\n      if (payload.indexOf(key) !== -1) {\n        query[key] =\n          data[key] === undefined || data[key] === null\n            ? \"\"\n            : typeof data[key] === \"object\"\n            ? JSON.stringify(data[key])\n            : data[key];\n      }\n    }\n  } else {\n    for (const key in payload) {\n      if (data[key] !== undefined) {\n        query[key] =\n          data[key] == null\n            ? \"\"\n            : typeof data[key] === \"object\"\n            ? JSON.stringify(data[key])\n            : data[key];\n      } else {\n        const definition = payload[key];\n        if (definition) {\n          query[key] = definition.defaultValue;\n        }\n      }\n    }\n  }\n  return query;\n};\n\nconst getBodyFromDataWithFile = (payload = [], fileIndex = [], data = {}) => {\n  const formData = new FormData();\n  const filteredData = convQueryParamsForGet(payload, data);\n\n  // payload\uC5D0 \uD3EC\uD568\uB41C \uD544\uB4DC \uCC98\uB9AC\n  for (const key in filteredData) {\n    const encodedKey = encodeURIComponent(key);\n    const encodedValue = encodeURIComponent(filteredData[key]);\n    formData.append(encodedKey, encodedValue);\n  }\n\n  // files\uC5D0 \uD3EC\uD568\uB41C \uD544\uB4DC \uCC98\uB9AC\n  for (const key in data) {\n    if (fileIndex.includes(key)) {\n      formData.append(key, data[key]);\n    }\n  }\n\n  return formData;\n};\n\nconst getBodyFromData = (payload = [], data = {}) => {\n  const filteredData = convQueryParamsForGet(payload, data);\n  const formData = new FormData();\n\n  for (const key in filteredData) {\n    formData.append(key, filteredData[key]);\n  }\n  return formData;\n};\n\nconst setPath = (path, pathParams = {}) => {\n  if (!path) {\n    console.log(\"path is undefined\");\n    return path;\n  }\n\n  // \uACBD\uB85C \uD30C\uB77C\uBBF8\uD130\uAC00 \uC788\uB294\uC9C0 \uD655\uC778\n  if (!hasParams(path)) {\n    return path;\n  }\n\n  // \uAC01 \uACBD\uB85C \uD30C\uB77C\uBBF8\uD130\uB97C \uC2E4\uC81C \uAC12\uC73C\uB85C \uCE58\uD658\n  let modifiedPath = path;\n  for (const [key, value] of Object.entries(pathParams)) {\n    const paramPattern = new RegExp(`\\\\{${key}\\\\}`, \"g\");\n    modifiedPath = modifiedPath.replace(paramPattern, value);\n  }\n\n  return modifiedPath;\n};\n\nconst runGetApi = (url, payload, queryParams = {}, headers = {}) => {\n  const query = convQueryParamsForGet({ payload }, queryParams);\n\n  return fetch(`${url}?${new URLSearchParams(query).toString()}`, {\n    headers,\n  }).then((res) => {\n    if (!res.ok) {\n      return res.json().then((err) => {\n        throw {\n          status: res.status,\n          statusText: res.statusText,\n          data: err,\n        };\n      });\n    }\n    return res.json();\n  });\n};\n\nconst runApi = (url, method, payload, data = {}, headers = {}) => {\n  const body = getBodyFromData({ payload }, data);\n  return fetch(url, {\n    method,\n    headers,\n    body,\n  }).then((res) => {\n    if (!res.ok) {\n      return res.json().then((err) => {\n        throw {\n          status: res.status,\n          statusText: res.statusText,\n          data: err,\n        };\n      });\n    }\n    return res.json();\n  });\n};\n\nconst runApiWithFiles = (\n  url,\n  method,\n  payload,\n  fileIndex = [],\n  data = {},\n  headers = {}\n) => {\n  const body = getBodyFromDataWithFile(payload, fileIndex, data);\n\n  if (headers[\"Content-Type\"] == undefined) {\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n  }\n\n  return fetch(url, {\n    method,\n    headers,\n    body,\n  }).then((res) => {\n    if (!res.ok) {\n      return res.json().then((err) => {\n        throw {\n          status: res.status,\n          statusText: res.statusText,\n          data: err,\n        };\n      });\n    }\n    return res.json();\n  });\n};\n\nexport const api = {};\nexport default function createOolio(_baseUrl, getAuthorizeToken) {\n  return async function request(pathParams = {}, data = null, headers = {}) {\n    const {\n      method,\n      path,\n      payload = [],\n      baseUrl = null,\n      authorization = null,\n      files = undefined,\n    } = this;\n\n    let url = baseUrl ? baseUrl : _baseUrl ? _baseUrl : \"http://localhost:3000\";\n    let requestData = data;\n\n    if (hasParams(path)) {\n      url = url + setPath(path, pathParams);\n    } else {\n      url = url + path;\n      if (!data) {\n        requestData = pathParams;\n      }\n    }\n\n    if (authorization != \"guest\" && getAuthorizeToken) {\n      const token = await getAuthorizeToken();\n      if (token) {\n        headers.Authorization = `Bearer ${token}`;\n      }\n    }\n\n    if (method == \"get\") {\n      return runGetApi(url, payload, requestData, headers);\n    } else if (hasFiles(files)) {\n      return runApiWithFiles(url, method, payload, files, requestData, headers);\n    } else {\n      return runApi(url, method, payload, requestData, headers);\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "api", "src_default", "__toCommonJS", "hasParams", "path", "hasFiles", "fileIndex", "convQueryParamsForGet", "payload", "data", "query", "key", "definition", "getBodyFromDataWithFile", "formData", "filteredData", "encodedKey", "encodedValue", "getBodyFromData", "setPath", "pathParams", "modifiedPath", "value", "paramPattern", "runGetApi", "url", "queryParams", "headers", "res", "err", "runApi", "method", "body", "runApiWithFiles", "createOolio", "_baseUrl", "getAuthorizeToken", "pathParams", "data", "headers", "method", "path", "payload", "baseUrl", "authorization", "files", "url", "requestData", "hasParams", "setPath", "token", "runGetApi", "hasFiles", "runApiWithFiles", "runApi", "createOolio", "instance", "_routes", "getAuthorizeToken", "baseUrl", "api", "logForNoRoutes", "logForNoGetAuthorizeToken", "init", "category", "fnName", "args", "r", "fn", "url", "src_default"]
}
